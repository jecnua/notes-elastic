K8s and ECS: Comparison
|| Last update: 30 May 2017

* Intro

TBD

* ECS

Task definition: JSON that defines one or more containers that forms your
application.

Task: Instance of a task definition.

Tasks run on a _cluster_.

It can register itself to an ALB.

Placement startegy:

- binpack
- random
- spread

NO service discovery!
You need to use internal ELBs.

* K8S

* PRO-CON

The registry (ECR) can be used by both.

** ECS

CON:

- No service discovery
- Local environment
- Limits access to resources by user
- Limit access
- AZ balancing out of the box
- Limited placement strategy

PRO:

- Simpler than k8s

** K8S

CON:


PRO:

- Security via RBAC
- Security not only at the edges
- Real self-service
- Service discovery: Auto DNS internally

* Examples

- Scale up/down
- Configuration
- Volume size

- Decide logs where and index (code)
- Decide to scrape and where (code)
- Namespace with limits cpu/mem/io
- Security not only at the edges like firewalls (code)
