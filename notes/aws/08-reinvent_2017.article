REINVENT NOTES 2017
|| Last update: 5 Jan 2017

* TLC301: Always online: Real-time communications on AWS

Nothing useful

* MAE303: OTT state of play: Innovation at Netflix, amazon video and aws elemental

Nothing useful

* DVC302: And you though you knew amazon EC2

New C5: KVM replaced ZEN for new instance types (curiosity: this info was in the
release article but was later removed :D)

All new instance types have ENA up to 25 Gbps (in placement groups)

New per second billing (with aggressive tuning and fast booting instances you
can get to save up to 30% on AG)

ELASTIC GPU: You can attach GPU to almost any instance (BUT you share the network
bandwidth of the node so be careful)

New Target Tracking Scaling policies for Autoscaling

cloudwatch event handling: Tie events to another GroupInServiceInstances

Scheduled events: Cron-like ability in a distributed fashion
distributed cron to trigger a lambda.
You can be notified when there is an instance state change.

System management

- Cross account event delivery, EBS snapshots, Encryption/Description

Cloudwatch metrics

- Added: High resolution 1s/3h (custom metric)
- High resolution alarm (10s)
- Collect cloudwatch plugin

Percentile statistic added (before only average)

- p50
- p90
- p99  <--- the more useful

Metric filter for log parsing and alarms (you can use lambda to send alerts to something else)

ECS added the ability to run a custom init process
blox/blox (probably obsolete) - https://github.com/blox/blox
cron/empire ?????? <---- could not find this. probably I misheard

** EC2 system manager

- Execute command execution with *run*command*
- Control secrets and configuration data with parameter store (credential in metadata)
- Periodic tasks with a state manager and maintenance windows
- Inventory and so on

    run commands (like mcollective)

- [[https://aws.amazon.com/blogs/aws/manage-instances-at-scale-without-ssh-access-using-ec2-run-command/]]
- [[https://aws.amazon.com/blogs/mt/secure-scalable-and-efficient-instance-management-using-amazon-ec2-run-command/]]

ALL is logged in cloudtrail and triggers from system manager events show
command history and output to s3.
Fine grained access control to run commands.
Integration with config.

*SSM*agent* - go executable that polls API for commands

- [[https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-agent.html]]

A shell for ec2 parameter store
- [[https://github.com/kountable/pssh]]

*ConfigRules* to enforce compliance with tagging schemes, ebs snapshots, etc

Monitor the EBS burst balance!!!

- [[https://github.com/awslabs/aws-shell]]

completition documentation etc

** IMP

- ec2 system manager
- ssm agent
-configrules

* STG311: Deep dive on s3 and glacier

Define access and lifecycle on tags

- metrics to report on
- access control

Remember how to use the namespacing for performance!

S3 Inventory

List of the files + metadata. Cron file delivery (support notifications)
Added encryption and export in [[https://aws.amazon.com/about-aws/whats-new/2017/11/s3-inventory-adds-apache-orc-output-format-and-amazon-athena-integration/][ORC]].

Could be used to have an idea on 0bytes files and so on.

You can query the inventory in Athena and use sql-like syntax to get values our of it

Metrics (1 minute) at bucket level of tag namespace.

*Storage*class*analysis*: You can see which storage class is good for you.
Run it for about a month and you will get advice on lifecycle policy

Cross region replication:
For:

- compliance
- lower latency
- security (blast rasium damage)
- replication it can be bi-directional

LIFECYCLE POLICIES ARE NOT COPIED!

Ownership overwrite for CERR:

- Replicas are owned by destination buckets
- Maintain two distinct and independent stack of ownership

It works also with Encryption.

** s3 default Encryption

Encrypt by default via SSE-S3 or SSE-KEYS [[https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html]]

*Amazon*Macie*: Via Machine learning can recognise sensible data in your s3.

Each character of the prefix gives you a xxx performance.

Data isolation via cross account is on infrequent directly and after glacier.

Failover is redirecting to another region

Transitions via the tag date (yyyy-mm)

** IMP

- s3 Inventory
- s3 metrics
- Storage class analysis
