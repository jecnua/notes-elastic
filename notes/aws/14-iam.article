IAM strategy - AWS account via GSuite SAML federation
|| Last update: 19 Jan 2021

* SAML Federated access to AWS from GSuite

A single-sign on mechanism to avoid having a duplication of users on AWS
and allow easier removal and group management.

* Tooling

- [[https://github.com/cevoaustralia/aws-google-auth]]
- [[https://cevo.com.au/post/2019-02-21-cli-aws-access-with-google-sso-using-aws-google/]]

Once you have that in place, to authenticate you can use a tool like
aws-google-auth. On MacOS it can be installed with brew:

    brew install aws-google-auth

You will need some information like IDP_ID and SP_ID. You also need to create
a profile beforehand on ~/.aws/credentials. Example of usage:

    aws-google-auth \
      --idp-id xxx \
      --sp-id 12345 \
      --duration 14400 \
      --region eu-west-1 \
      --profile my-profile

NOTE: The duration of the token cannot be longer than what it set up on AWS.

You may be asked to solve a captcha when using it. To avoid the link preview
to fail on MacOS Big Sur, symlink the following:

    ln -s /System/Applications/Preview.app /Applications/Preview.app

Otherwise you will see the following:

    Please visit the following URL to view your CAPTCHA:
    https://accounts.google.com/Captcha?v=2&ctoken=xxx-xxx-xxx-xxx-xxx
    Captcha (case insensitive): The application /Applications/Preview.app cannot
    be opened for an unexpected reason, error=Error Domain=NSCocoaErrorDomain
    Code=260 "The file “Preview.app” couldn’t be opened because there is no such
    file." UserInfo={NSURL=file:///Applications/Preview.app,
    NSFilePath=/Applications/Preview.app, NSUnderlyingError=0x7f80d8c0eb20
    {Error Domain=NSPOSIXErrorDomain Code=2 "No such file or directory”}}

** Auth verification

The order of auth verification can be found here:

- [[https://github.com/cevoaustralia/aws-google-auth/blob/d473d67b0772700942f5bb0db3522af0a1005453/aws_google_auth/google.py#L830]]

    auth_methods = {
        2: 'TOTP (Google Authenticator)',
        3: 'SMS',
        4: 'OOTP (Google Prompt)'
    }

* Known issues

If calling the tool results in error, the error can be debugged by saving the
failure page with the flag --save-failure-html.

So for example if your normal usage is:

  aws-google-auth -p <my-profile>

use:

  aws-google-auth -p <my-profile> --save-failure-html

** Password expiration

If your password needs to be changed the command line tool will fail and the error
page will be google page to change password.

You may need to change password EVEN if you are still logged in your email.

To make sure the error is correct logout from you email and try to login again.
You should receive the same prompt in the browser.

After changing your password remember to change the password also on your device
that you use to approve the login attempt.

If you don’t have Google Authenticator on your phone/device the second auth
method that will be tried by google is an SMS with the number configured on the
account.

SMS verification didn’t work for me so make sure the app is working.

*** Keyring update

In case you are using the keyring to store you password (using the flag -k),
this entry needs to be removed from the keyring before attempting to use the tool again.

You can remove the entry via shell on MacOS with the following:

    # MacOs Big Sur
    sudo security delete-generic-password \
      -l aws-google-auth $HOME"/Library/Keychains/login.keychain-db"
