Test kitchen: Test kitchen + Serverspec + Docker
|| Last update: xx xxx xxxx

* Intro

TDB

* The code

Bash to generate a puppet module:

- [[https://gist.github.com/jecnua/57024265332c03e9edd70647473a793e]] bash gist

An updated version of the gists used can be found here:
- [[https://gist.github.com/jecnua/b3550ac1cab861bceb6f1b38644b9b2e]] kitchen.yml gist
- [[https://gist.github.com/jecnua/aefffebda8eeb8f9a541323bcdeb5815]] Gemfile gist
- [[https://gist.github.com/jecnua/788748542498a3ebf11b3ad025ee56fa]] spec_helper.rb gist

* Verifier: Serverspec

** Nuts and bolts

    verifier:
      name: serverspec
      remote_exec: false # Use the local tools. Faster

This works faster because it uses the local version of serverspec instead of
installing all via Gem in the docker container (when set to true).
Also to make that setting works you need to put the following in the spec_helper:

    set :backend, :ssh
    set :path, '/sbin:/usr/local/sbin:$PATH'

    options = Net::SSH::Config.for(host)
    options[:host_name] = ENV['KITCHEN_HOSTNAME']
    options[:user]      = ENV['KITCHEN_USERNAME']
    options[:port]      = ENV['KITCHEN_PORT']
    options[:keys]      = ENV['KITCHEN_SSH_KEY']

Overriding the verifiers patterns in the suite section:

    verifier:
      patterns:
      - test/integration/default/serverspec/localhost/default_spec.rb

Doesn't work unless you use verifier serverspec!

** Problem: spec_helper path

One last problem: how to load spec helper?

    suites:
      - name: one
        provisioner:
          manifest: entry_point.pp
        verifier:
          patterns:
            - test/integration/default/serverspec/*_spec.rb
      - name: two
        provisioner:
          manifest: check.pp
        verifier:
          patterns:
            - test/integration/default/serverspec/localhost/*_spec.rb

this works but doesn’t load spec_helper when called as:

    require 'spec_helper'

no matter the path!

* Verifier: Shell

If you read here https://github.com/test-kitchen/busser-serverspec they say:

    You should use Kitchen::Verifier::Shell + Serverspec instead of Busser::RunnerPlugin::Serverspec.

    - Official Document (This PR has been merged. You can use this with Test Kitchen 1.5.0)
    - Cookbook testing by Serverspec with Shell Verifier of Test Kitchen (Japanese)

More explanations here:
http://www.creationline.com/en/lab/12161

Look here for an example:
https://github.com/cl-lab-k/apache2-take/tree/shell_verifier
https://github.com/cl-lab-k/apache2-take/blob/shell_verifier/.kitchen.yml

This is faster!

    verifier:
      name: shell
      command: rspec -c -f d -I serverspec test/integration/default/serverspec/localhost/*_spec.rb

    suites:
      - name: default
        provisioner:
          manifest: entry_point.pp
        verifier:
          command: rspec -c -f d -I test test/integration/default/serverspec/localhost/*_spec.rb
      - name: two
        provisioner:
          manifest: check.pp
        verifier:
          command: rspec -c -f d -I test test/integration/default/serverspec/*_spec.rb

But it’s only one...

** Run multiple files

Now I need to pass more than one

    verifier:
      name: shell
      command: rspec -c -f d -I serverspec test/integration/default/serverspec/localhost/*_spec.rb

    suites:
      - name: default
        provisioner:
          manifest: entry_point.pp # You can override provisioner settings like this
        verifier:
          command: |
            rspec -c -f d -I test test/integration/default/serverspec/localhost/*_spec.rb
            rspec -c -f d -I test test/integration/default/serverspec/*_spec.rb

Done.

* Re/Sources

- [[https://www.youtube.com/watch?v=AXFjCmCISCc]] Test Driven Infrastructure with Docker, Test Kitchen and Serverspec (Feb 10, 2016)
