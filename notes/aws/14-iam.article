IAM strategy - (this article needs to be cleaned)
|| Last update: 11 Jun 2020

* SAML Federated access to AWS from GSuite

- single-sign on and more secure management of users

Once you have that in place, to authenticate you can use a tool like
aws-google-auth:

- [[https://github.com/cevoaustralia/aws-google-auth/]]

You will need some information like IDP_ID and SP_ID. You also need to create
a profile beforehand on ~/.aws/credentials.
The you use it this way:

    aws-google-auth \
      --idp-id xxx \
      --sp-id 12345 \
      --duration 14400 \
      --region eu-west-1 \
      --profile my-profile

*10 JUN 2020*: There is a bug at the moment with the tool. If you install it via
pip you wonâ€™t be able to login.

- [[https://github.com/cevoaustralia/aws-google-auth/issues/179#issuecomment-641439606]]

Until the fix is merged please install the tool from the repository.

    $ git clone https://github.com/brunodasilvalenga/aws-google-auth.git
    $ cd aws-google-auth
    $ git checkout fix-google-captcha
    $ pip install -e . --user

* TO BE CLEANED AFTER THIS POINT

Best practices is at the moment to have users and roles in a security account
and once authenticated there assume role in another.

This allows to have a single place to manage users.

* Access via Identity Federation

- [[https://aws.amazon.com/blogs/aws/new-for-identity-federation-use-employee-attributes-for-access-control-in-aws/]]

you cannot have a free open system and talk about security

* Policy from day one

use federated access
every machine can login via ssh on a machine via AWS SSM

everyone is using federated access

using SAML
or
amazon single sign on

AWS Inspect
you can define what people can do
and if it's blocked you can review the rule
