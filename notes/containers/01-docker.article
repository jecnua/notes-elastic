Docker: Notes
OBSOLETE

* Docker

Docker *is*not* a virtualization technology, it's an application delivery technology.
It was known as dotCloud.

* Data

You data do not lie in the container, it lives in a named volume that is shared between containers.
Theoretically containers should be stateless and immutable.
You backup the data volume.

* Some info

Docker SDN - Software Defined Network. DNS round-robin load balancing (v 1.11+)

.image images/workflow.png _ 600
.caption Workflow by docker docs

* runC

.image images/hamster.png _ 300
- https://runc.io/ runc.io
- https://github.com/opencontainers/runc runc on github

Defined as a *lightweight*portable*container*runtime* is a sandboxing environment capable of abstracting the specifics of the underlying hosts.
Has been released the _22_June_2015_ as a standalone component.
Build on *libcontainer*, it's using technology created in the last 5 years (really??? check???) like:

- control groups
- linux namespaces and user namespaces
- seccomp
- capabilities
- apparmor
- selinux
- capability_drop
- pivot_root
- uig/gid drop

runC doesn't create a deamon, so it integrates well with systemd.
It has no dependency on Docker!
Donated to OCP.

* containerd (alpha)

.image images/sub.png _ 300
- https://www.containerd.tools/ containerd.tools
- https://github.com/docker/containerd containerd on github

Docker runtime to control runC.
Is a project to move the container supervision out of the docker engine.
Docker 1.11 is the first release using this deamon.

.image images/containerd_workflow.png _ 600

Engine restart/update without restarting the containers.
Id a deamon providing a grpc api.
Manage all the life of an OCI bundle.

* Docker timeline

** Docker 1.11

First one to run on containerd and runC, and based on OCI spec.
- Swarm 1.2 rescheduling containers when a node dies
- Fixed zombie reaping

* On mac

.image images/xhyve_logo.png _ 300
- https://github.com/mist64/xhyve xhyve hypervisor on github

xhyve wraps native osx hypervisor framework.

* Re/Sources

- [[http://www.smashcompany.com/technology/why-would-anyone-choose-docker-over-fat-binaries][Why would anyone choose Docker over fat binaries?]] October 25th, 2017 - Good article on the pitfall of adopting docker in prod
- h[[ttps://thehftguy.com/2017/02/23/docker-in-production-an-update/]] - 23 February 2017
- [[https://thehftguy.com/2016/11/01/docker-in-production-an-history-of-failure/]] - 1 November 2016
- [[https://queue.acm.org/detail.cfm?id=2898444]] History behind k8s (from google people)
- [[http://containerops.org/2014/12/19/docker-vs-rocket-gimme-a-break/]] docker-vs-rocket-gimme-a-break
- [[http://www.infoworld.com/article/3029682/application-virtualization/coreos-launches-rocket-10-directly-at-docker.html]] CoreOS launches Rocket 1.0 directly at Docker
- [[http://www.infoworld.com/article/2865369/open-source-software/docker-or-rocket-for-containers-why-not-both.html]] Docker or Rocket for containers? Why not both?
- [[https://blog.docker.com/2016/06/azure-aws-beta/]] new swarm with 1.12 (21 June 2016)

** Docker security

- [[http://www.slideshare.net/PhilEstes/docker-london-container-security]] Docker container security (Jul 20, 2016)
- [[https://www.nccgroup.trust/us/our-research/understanding-and-hardening-linux-containers/]] understanding-and-hardening-linux-containers (29 June 2016)
- [[https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.11.0_Benchmark_v1.0.0.pdf]] CIS_Docker_1.11.0_Benchmark_v1.0.0.pdf (04-12-2016)
- [[https://docs.docker.com/engine/security/]] Docker security
