Grafana + Jsonett & Grafonnet
|| Last update: 11 April 2017

* Intro

.image images/grafana_as_code.png
.caption Source: [[https://www.youtube.com/watch?v=zmsZq9Pfp1g][Automating Grafana Dashboards with Jsonnet]]

Scripted dashboard: [[http://docs.grafana.org/reference/scripting/]]




* jsonnet-bundler (jb)

- [[https://github.com/jsonnet-bundler/jsonnet-bundler]]

Install JB

    GO111MODULE="on" go get github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb

after you installed it, you can install the dependencies

    jb install \
    github.com/grafana/grafonnet-lib/grafonnet@master

js will read the jsonnetfile.json you have locally and download everything in the
vendor directory

    {
      "version": 1,
      "dependencies": [
        {
          "source": {
            "git": {
              "remote": "https://github.com/grafana/grafonnet-lib",
              "subdir": "grafonnet"
            }
          },
          "version": "master"
        },
        {
          "source": {
            "git": {
              "remote": "https://github.com/grafana/jsonnet-libs",
              "subdir": "grafana-builder"
            }
          },
          "version": "master"
        }
      ],
      "legacyImports": true
    }

and create a lock file









* Jsonett & Grafonnet [Preferred]

** Jsonett

- [[http://jsonnet.org/]]
- [[https://github.com/google/jsonnet]]
- [[http://jsonnet.org/docs/tutorial.html]] - Tutorials
- [[https://www.youtube.com/watch?v=i5PVp92tAmE]]

Superset of json.
Will output in json.

- IT ACCEPTS COMMENTS
- You can put a comma at the eng of an array
- You can avoid comma in the key
- You have variables
- You have functions (with parameters)
- Import libraries: like Grafonnet
- You can output on multiple files
- jsonnet ftm (just one best practices with styleguide)

*** Installation

On MACOSX:

    brew install jsonnet

*** Atom support

You can find an Atom language package at [[https://github.com/google/language-jsonnet]]:

    apm install language-jsonnet

*** stdlib

.image images/jsonnet_stdlib.png
.caption Source: [[https://www.youtube.com/watch?v=zmsZq9Pfp1g][Automating Grafana Dashboards with Jsonnet]]

** Grafonnet

- [[https://github.com/grafana/grafonnet-lib]]

YOu have a lot of functions to avoid repeatable tasks.
Multiple files can be savad in multiple directories.
Reuse existing dashbords.

* KLUMPS (only prometheus)

KLUMPS: Kubernetes/Linux USE Method with Prometheus.

kausal has been bought by Grafana

- [[https://kausal.co/blog/]]
- [[https://github.com/kausalco/public/tree/master/klumps]]

* Grafanalib

- [[https://github.com/weaveworks/grafanalib]]

* Other

- [[http://docs.grafana.org/http_api/annotations/#create-annotation]]

    curl \
      -k \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer xxx" \
      -X POST \
      -d '{"tags":["sync","test"], "dashboardId":23, "time":1534782450455,"panelId":18,"text":"test has started sync process"}' \
      http://xxx/api/annotations

Grafana wants to have the actual epoch (unix time) in millisecond:

- [[http://currentmillis.com/]]

    date +%s%3N

Get the id of a dashboard from the uid:

- [[http://docs.grafana.org/http_api/dashboard/#identifier-id-vs-unique-identifier-uid]]

    curl \
    -k -s \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer xxx" \
    -X GET http://xxx/api/dashboards/uid/yyy | jq .dashboard.id

* Re/Sources

- [[https://www.youtube.com/watch?v=zmsZq9Pfp1g][Automating Grafana Dashboards with Jsonnet]] - [[https://www.slideshare.net/roidelapluie/grafonnet-grafana-dashboards-as-code][SLIDES]] - 23 Mar 2018
- [[https://www.youtube.com/watch?v=OOyEGG98B7w][Grafanalib: Dasbhoards as Code]] - 23 Mar 2018
- [[https://www.youtube.com/watch?v=i5PVp92tAmE][Jsonnet]] - a good demo - 21 Jun 2017
