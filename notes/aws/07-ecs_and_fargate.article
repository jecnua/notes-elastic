ECS and FARGATE for ECS
|| Last update: 24 Sep 2018

* ECS

- My terraform module: [[https://github.com/jecnua/tf-aws-ecs]]

A cluster is formed by a variable number of machines that subscribe to a
define entity. They can have different sizes and span many AZs.
ECS however is region-bound.

All the machines subscribed are part of your pool of resources.

** EC2 servers

Is up to you to create and manage the cluster of ECS.
Each machine has a two external dependencies:

- ECS Agent running
- Docker deamon running
- A nanny proces

    ssm get-parameters-by-path --region=eu-west-1 --path '/aws/service/ecs/optimized-ami/amazon-linux/'

    ssm get-parameter --region=eu-west-1 --name /aws/service/ecs/optimized-ami/amazon-linux/recommended
   {
       "Parameter": {
           "Name": "/aws/service/ecs/optimized-ami/amazon-linux/recommended",
           "Type": "String",
           "Value": "{\"schema_version\":1,\"image_name\":\"amzn-ami-2018.03.g-amazon-ecs-optimized\",\"image_id\":\"ami-05b65c0f6a75c1c64\",\"os\":\"Amazon Linux\",\"ecs_runtime_version\":\"Docker version 18.06.1-ce\",\"ecs_agent_version\":\"1.20.3\"}",
           "Version": 10
       }
   }

- [[https://docs.aws.amazon.com/AmazonECS/latest/developerguide/retrieve-ecs-optimized_AMI.html]]


** ECS Agent

Send commands from the ecs core to docker.

    This is an open-source project. ???

    LINK: all things ditrubuited/2015/07/under the hood amazon ec2 service
    airb&b released one of these agent

    any amazon AMI gets bundled with an ECS agent
    you can install the ecs agent on any other linux distributing (recent)
    so if you have data compliance and regulation, you can force the OS

** TASK DEFINITION

You can generate it this way:

    aws ecs register-task-definition --generate-cli-skeleton

- description of your application in JSON format...
- you can use a docker link (but not adviced)
- an instantiation of these will be a running task

of many tasks needs to run at a specific time
-> tasks have X container
allow to tie a service with an ELB
will automatically register to an ELB
they use it heavily to scale

ECS core service
four component

- agent communication service (two way communication)
- API
- Cluster management engine
- Key/Value store (paxos based system) - transactional log of all that happens

When it was lunched there was no GUI, just API.
Also authenticates with a public or private docker registry.
Still not s3.

WORKFLOW

- create docker
- push image
- create json file describing your task definition
- register the task definition with ECS
- make sure that a cluster has enough resources
- start a new task from the task definition

** Load Balancing

- [[https://aws.amazon.com/premiumsupport/knowledge-center/dynamic-port-mapping-ecs/]]

You can set up dynamic port mapping with A/NLB.

** Service discovery

    aws servicediscovery list-namespaces
    {
        "Namespaces": []
    }


- [[https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html]]

  $ aws ssm get-parameters \
    --names /aws/service/ecs/optimized-ami/amazon-linux/recommended/image_id \
    --region us-east-1 \
    --query "Parameters[0].Value"
  "ami-0b9a214f40c38d5eb"

** Service autoscaling

- [[https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-service-linked-roles.html]]

You want to use AWSServiceRoleForApplicationAutoScaling_ECSService.

** Secrets

- [[https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html]]

AWS added the functionality to pas secrets stored on SSM. However this functionality
is not working at the moment on CF.

*** Terraform

- [[https://www.terraform.io/docs/providers/aws/r/appautoscaling_policy.html]]
- [[https://www.terraform.io/docs/providers/aws/r/appautoscaling_target.html]]

*** Cloudformation

- [[https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html]]
- [[https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html]]

** Disk space on ECS

TIL that the ECS service has parameters for automatically cleaning up unused
Docker images and ECS tasks. Otherwise, your container hosts will eventually
fill up disk space from downloading docker images.

- [[https://docs.aws.amazon.com/AmazonECS/latest/developerguide/automated_image_cleanup.html]]

    "UserData": {
      "Fn::Base64": {
        "Fn::Join": [
          "",
          [
            "#!/bin/bash -xe\n",
            "echo 'ECS_CLUSTER=",
            {
              "Ref": "ECSCluster"
            },
            "' >> /etc/ecs/ecs.config\n",
            "echo 'ECS_DISABLE_IMAGE_CLEANUP=False' >> /etc/ecs/ecs.config\n",
            "echo 'ECS_ENGINE_TASK_CLEANUP_WAIT_DURATION=5m' >> /etc/ecs/ecs.config\n",
            "yum install -y aws-cfn-bootstrap\n",
            "yum install aws-cli -y\n",
            "yum install git -y\n",
            "yum install awslogs -y\n",
            "/opt/aws/bin/cfn-signal -e $? ",
            "         --stack ",
            {
              "Ref": "AWS::StackName"
            },
            "         --resource ECSAutoScalingGroup ",
            "         --region ",
            {
              "Ref": "AWS::Region"
            },
            "\n",
          ]
        ]
      }
    },
    "EbsOptimized": "true"
    }
    },

* FARGATE for ECS

You can't use EFS or EBS with Fargate. There is no option to mount EFS volumes on
Fargate. Fargate allow to use any
[[https://aws.amazon.com/about-aws/whats-new/2018/09/aws-fargate-now-supports-private-registry-authentication/][private repo]].

** More info

I run a quick test and run a docker container via fargate for ECS (4h SPIKE).

PRO:

    No cluster maintainance

CON:

    Cost is too high
    Running/Changes to the service are connected to terraform changes

- [[https://github.com/jecnua/terraform-fargatetest]]

** Cost

    Cost    1 vCPU 0.0506/h	1 GB RAM 0.0127/h
    xDay    1.5192
    xMonth  45.576

The cost of a small container (only 1vCPU and 1GB of RAM) for 1 month is $45.5
dollars. The cost of a m5.large (2vCPU and 8GB of RAM) on demand per month is
$69.12.

- [[https://aws.amazon.com/fargate/pricing/]]
- [[https://www.ec2instances.info/?selected=m5.large]]

* Limitations

- Fargate only support awsvpc network mode
- Fargate only support awslogs as log configurations
- Fargate doesn't allow you to mount EBS. It has only 10GB of docker layer storage and 4GB volume mount to share data with other containers
- A task definition can contain up to 10 containers.
