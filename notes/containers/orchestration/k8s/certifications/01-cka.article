CKA notes
|| Last update: 10 Oct 2018

* To clarify

- k8s ports
- cgroup drivers
- no need for cni package

* Kubernetes course: CKA certified kubernetes administrator

* Intro

.image images/k8s_high_level.png
.caption Source: [[https://www.safaribooksonline.com/videos/oscon-2017/][Kubernetes hands-on - Kelsey Hightower (Google) - Part 1]]

* Network

Kubernetes made some interesting choices on how networking should be implemented.
It defines the network model but leave it to third party plugins a way to
implement it.

Each pod can communicate to each other pod on any host of the cluster, without
a NAT.

** CNI

- [[https://github.com/containernetworking/cni]]

    CNI (Container Network Interface), a Cloud Native Computing Foundation
    project, consists of a specification and libraries for writing plugins
    to configure network interfaces in Linux containers, along with a number
    of supported plugins. CNI concerns itself only with network connectivity of
    containers and removing allocated resources when the container is deleted.
    Because of this focus, CNI has a wide range of support and the specification
    is simple to implement.
    Source: https://github.com/containernetworking/cni

A CNI plugin is an *executable* invoked by the container management system. It's
responsible for:

- Inserting the network interface (one end of a vETH pair) in the container network namespace
- Making changes to the host: like attaching the other end of the vETH pair to the bridge network
- Assign the IP, put up the routes and apply IPAM rules depending on your topology

You can choose the right plugin for your workload.

** CNI plugins

- [[https://github.com/projectcalico/calico-cni]]
- [[https://github.com/weaveworks/weave]]

* Re/Sources

- [[https://linuxacademy.com/linux/training/course/name/certified-kubernetes-administrator-preparation-course]]
- [[https://www.safaribooksonline.com/videos/oscon-2017/][Kubernetes hands-on - Kelsey Hightower (Google) - Part 1]]
