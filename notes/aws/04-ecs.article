ECS
|| Last update: 27 Jan 2017

* Give developers access to ecs

** IAM user

Create new user with _AmazonEC2ContainerRegistryPowerUser_ policy.

.image images/ecs-policy.png _ 900

- create group with that policy
- create user with key/token

Save token/secret for later

** Install aws cli

[[https://aws.amazon.com/cli/][cli documentation]]

You can install it via brew:

    $ brew install awscli

or via python

    $ pip install awscli

** Add token/secret to personal config

If you already have a .aws/credential but no account
do this (region is us-east-1):

    [default]
    region = us-east-1
    aws_access_key_id = xxx
    aws_secret_access_key = xxx

otherwise:

    $ aws configure

will guide you through the configuration (token/secret when asked).

** Docker credential plugin for AWS

[[https://github.com/awslabs/amazon-ecr-credential-helper][Download]] the
docker credential plugin:

*** Compile and add on path

You can clone and compile and add the following executable
_docker-credential-ecr-login_ on your path
and make it executable:

    $ chmod 700 docker-credential-ecr-login

*** Credential helper config

Add credential helper config
([[https://aws.amazon.com/blogs/compute/authenticating-amazon-ecr-repositories-for-docker-cli-with-credential-helper/][docs]]):

    $ cat .docker/config.json
    {
    "auths": {
        "https://xxx.dkr.ecr.us-east-1.amazonaws.com": {
        },
        "https://index.docker.io/v1/": {
            "auth": "xxx"
        }
    },
        "credsStore": "ecr-login"
    }

*NOTE*: You will have this lines only if you also use Dockerhub:

    "https://index.docker.io/v1/": {
        "auth": "xxx"
    }

*** Test it

You can run the following

    $ mkdir -p /tmp/testecs
    $ cd /tmp/testecs
    $ echo "from alpine" > Dockerfile
    $ docker build -t testecs .
    $ docker tag testecs xxx.dkr.ecr.us-east-1.amazonaws.com/testecs:myname
    $ docker push xxx.dkr.ecr.us-east-1.amazonaws.com/testecs:myname
