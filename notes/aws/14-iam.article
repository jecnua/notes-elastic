IAM strategy (this article needs to be cleaned)
|| Last update: 18 Sep 2018

* TDB

Private user account

it's not just a deployment
who has accent to what
who have access to do significant damage

user in prod account
and assume account in dev

* have a single place to manage the user

On deployment one of the deploy pipeline
the node have a limited set of permission
when you need to do something more
it needs to get more permission

then there is another one that have access to everything

* fff

one account for each developer
is not the right forward

- How to reduce blast radius?

federated sso account?
each have their own aws user

* user management

- each dev an iam account
- link to AD

segregate via team?

instead of binding
they were just creating roles for servers
they are not using their personal IAM roles

every day
you create another use in the dev account
and use that key

access free for all
you cannot have a free open system and talk about security

do we want that any xxx
working around something

*

policy from day one

use federated access
to look on access
every machine can login via ssh on a machine via AD

everyone is using federtated access

using saml
or
amazon single signe on

use sts

answers page
aws multi account security stragegy

aws secondary AD in the cloud

federated how does it work

aws config and insoector
to write policy to validate
before the rest
like unit tests

cloud trail?

everything should be done via pipeline
-> when everything goes down
looking down on what how deployed

==

inspect
you can define what people can do
and if it's blocked you can review the rule
