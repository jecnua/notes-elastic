Local k8s environment (minikube)
Fabrizio Sabatini || Last update: 27 Nov 2018

* Disclaimer

This installation and usage guide is for MacOSX and Linux

* Install generic dependencies

MacOSX:

    brew cask install \
      minikube

    brew install \
      kubernetes-cli

Linux:

    curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
    sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
    sudo apt-get install -y kubectl

    curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && \
    chmod +x minikube && \
        sudo mv minikube ~/bin/

* Install engine dependencies for hyperkit (optional)

    curl -LO https://storage.googleapis.com/minikube/releases/latest/docker-machine-driver-hyperkit \
    && chmod +x docker-machine-driver-hyperkit \
    && sudo mv docker-machine-driver-hyperkit /usr/local/bin/ \
    && sudo chown root:wheel /usr/local/bin/docker-machine-driver-hyperkit \
    && sudo chmod u+s /usr/local/bin/docker-machine-driver-hyperkit

.link https://github.com/kubernetes/minikube/blob/master/docs/drivers.md#hyperkit-driver minikube/hyperkit-driver

* (MAC ONLY) Install engine dependencies for xhyve (deprecated)

    brew install \
      docker-machine-driver-xhyve --HEAD xhyve

    sudo chown root:wheel \
      $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve
    sudo chmod u+s \
      $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve

.link https://github.com/kubernetes/minikube/blob/master/docs/drivers.md#xhyve-driver minikube/xhyve-driver

* Other options

 - KVM2
 - KVM (deprecated)
 - Hyperkit
 - xhyve (deprecated)
 - HyperV

.link https://github.com/kubernetes/minikube/blob/master/docs/drivers.md github.com minikube/drivers

* Minikube (example)

[[https://github.com/kubernetes/minikube][kubernetes/minikube]]

Clean any old running cluster:

    # NOTE: Check what you are going to destroy first :)
    minikube stop
    minikube delete

Set the machine:

    # To opt-out from sending anonymised crash report
    minikube config set WantReportErrorPrompt false
    minikube config get vm-driver
    minikube config set vm-driver hyperkit
    minikube config get vm-driver

Start a new machine:

    minikube start # Start a cluster
    kubectl config use-context minikube # switch context to minikube
    minikube status

* Minikube on ubuntu

Clean any old running cluster:

    # NOTE: Check what you are going to destroy first :)
    minikube stop
    minikube delete

Set the machine:

    # To opt-out from sending anonymised crash report
    minikube config set WantReportErrorPrompt false
    minikube config set vm-driver kvm2
    minikube config set efk true
    minikube config set heapster true

Start a new machine:

    # Start a cluster with cri-o
    minikube start --network-plugin=cni --container-runtime=cri-o
    minikube status
    kubectl config use-context minikube # switch context to minikube

* (Optional: ONLY KVM)

- https://virt-manager.org/download/

You can install _virt-manager_ to have a GUI for all libvirt managed vms.

* Use alternative runtimes

[[https://github.com/kubernetes/minikube/blob/master/docs/alternative_runtimes.md][Supported]] are:

- CRI-O
- rkt
- containerd
- docker

* Stop and delete minikube

    minikube stop
    minikube delete

* Usage (example on github repo)

    minikube status
    minikube --help

Run a box:

    kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080

Access it:

    kubectl expose deployment hello-minikube --type=NodePort
    # The -w flag will "wait" on the command
    kubectl get pod -w
    curl $(minikube service hello-minikube --url)

More info:

    minikube dashboard

* Ingress

To enable the ingress:

    minikube addons enable ingress

* Mount and access dirs [v0.18.0+]

- [[https://github.com/kubernetes/minikube/blob/v0.18.0/README.md#persistent-volumes][persistent-volumes]]
