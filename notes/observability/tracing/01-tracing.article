Tracing
|| Last update: 2 May 2018

* Intro

.image images/tracing.png
.caption [[https://www.jaegertracing.io/docs/architecture/]]

Distributed tracing collects end-to-end latency graphs, called traces.
You can compare traces to understand why certain requests take longer than others.

* Concepts

- Span: _Individual_operation_ that took place
- Trace: Latency graph composed of spans
- Tracers: Records span and passes context required to connect them into a trace
- Instrumentation: Use tracers to record a _task_

** Span

A span contains:

- timestamped events
- tags

SPANS can and should be send asynchronously.
Trace/Span identifiers don't have to propagate downstream.

In band context propagation?

** Trace

** Tracers

Tracers are libraries.

They are used to record time, duration and host.

Tracers propagate IDs/Structural data *in-band*, to tell the receiver that there is a trace in
progress. Completed spans are reported *out-of-band*, to reduce the overhead and
allow batching.

** Instrumentations

What and how to trace.

- Is invisible to users
- Decides what to record
- Decides how to propagate the state

They usually have a _data_sampling_policy_ to manage volume.

* Side effects

Tracing cases size and latency overhead. Tracers should never cause application
failure if they fail. Instrumentation are written to not slow or overload the
request.

* Tracing systems

Tracing systems collect, process and present data reported by tracers:

- Aggregate spans into trace trees
- Provide query and visualization focused on latency
- Have retention policy

* OpenTracing

- [[http://opentracing.io/]]

OpenTracing is just a specification. A vendor neutral interface for
instrumentations.

** Implementations

Both of theses are compatible with OpenTracing:

- Zipkin
- Jaeger

* Re/Sources

- [[https://www.youtube.com/watch?v=GccUVCI5TkM][OpenTracing with Jaeger - Utah Go User Group]] - 8 Nov 2017
- [[https://www.jfokus.se/jfokus18/preso/An-Introduction-to-Distributed-Tracing-and-Zipkin.pdf]] - Very useful to understand the concepts
