AWS Landing Zone and AWS Control Tower
|| Last update: 27 May 2020

* xxx

- AWS SSO
- Security HUB
- Service catalog - central place for prepared resources to configure and provision
- https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html
- cloud custodian
- SDLC tier

Multi account environment based on best practices.

- Isolation by SDLC tier
- Administrative isolation
- Limited visibility and discoverability of workload
- Minimize blast radius
- Strong isolation for auditing data

* Intro

- [[https://aws.amazon.com/solutions/implementations/aws-landing-zone/]]

Way to isolate resources and accounts. Blast radius limited.
Accounts is the best way to achieve it.

AWS control tower is an AWS service version of AWS Landing Zone.
They implemented as a managed services.

Guardrails not blockers. Auditable.

AWS Landing Zone solution was launched in June 2018, while AWS Control Tower
was announced in November 2018 and launched in June 2019.

AWS Landing Zone is a solution that helps customers more quickly set up a secure,
multi-account AWS environment based on AWS best practices.

    The AWS Landing Zone solution deploys an AWS Account Vending Machine (AVM)
    product for provisioning and automatically configuring new accounts. The AVM
    leverages AWS Single Sign-On (SSO) for managing user account access. This
    environment is customizable to allow customers to implement their own account
    baselines through a Landing Zone configuration and update pipeline.
    Source: https://aws.amazon.com/solutions/implementations/aws-landing-zone/

    AWS Landing Zone is a solution that helps customers more quickly set up a
    secure, multi-account AWS environment based on AWS best practices. With the
    large number of design choices, setting up a multi-account environment can
    take a significant amount of time, involve the configuration of multiple
    accounts and services, and require a deep understanding of AWS services.
    This solution can help save time by automating the set-up of an environment
    for running secure and scalable workloads while implementing an initial
    security baseline through the creation of core accounts and resources.
    AWS Landing Zone deploys an AWS Account Vending Machine (AVM) product for
    provisioning and automatically configuring new accounts. The AVM leverages
    AWS Single Sign-On for managing user account access. This environment is
    customizable to allow customers to implement their own account baselines
    through a Landing Zone configuration and update pipeline.
    Source: https://aws.amazon.com/about-aws/whats-new/2018/06/introducing-aws-landing-zone/

Lock credentials for root
CloudTrail
guardduty
Federation via identify provider
LDAP/ActiveDir

s3 bucket encryption
ebs encrypted

* Concepts

AWS Organization account
service control policy
consolidate billing
almost no resources

Where to store our logs?

CORE ACCOUNT:
isolation depending on the team who manages it
cross account access

LOGGING ACCOUNT
services and common thing.
extremely reduces access
alert on logging
- Logging account

SECURITY ACCOUNT
cross account roles (audit)
shutdown resources
send security logs to logging account
owned by infosec or centralised security

SHARED SERVICES
common tooling
ldap or active director
scanning instances
golden ami
shared services group
DNS

DEVELOPERS ACCOUNTS
- spending limit
- DEVELOPER SANDBOX

BU/Product/Account
could be repeated
- like dev/pre-prod (connected to datacenter)/ account
- connect to shared services and send logs to logging

AWS SSO federation
multi account cross login
Config rules baseline
Network baseline

* Implementation

There is a cloudformation template.

The AWS Landing Zone solution includes four accounts, and add-on products that
can be deployed using the AWS Service Catalog.

** Organizations account

The AWS Landing Zone is deployed into an AWS Organizations account
This becames the master account.

- No connection to DC
- Service control Policies
- Consolidated billing
- Volume discount
- Minimal resources
- Limited access

Rules superseed all the local access to the account
even the root account
policies to stop remove cloudtrail or create internet gateway.

    The AWS Landing Zone is deployed into an AWS Organizations account. This
    account is used to manage configuration and access to AWS Landing Zone
    managed accounts. The AWS Organizations account provides the ability to
    create and financially manage member accounts. It contains the AWS Landing
    Zone configuration Amazon Simple Storage Service (Amazon S3) bucket and
    pipeline, account configuration StackSets, AWS Organizations Service Control
    Policies (SCPs), and AWS Single Sign-On (SSO) configuration.
    Source: https://aws.amazon.com/solutions/implementations/aws-landing-zone/

account provisionin, ue aws organization api to create account
pipeline for configurating landing zone, endpoint for providinr single sign on
to provide full access


    From the Master account, you can set up an AWS Control Tower that allows you to create:
    Two Organizations Units (OUs), Core Unit and Custom Unit, (AWS Login and Audit are linked with Core Unit and AWS Custom Account are linked with Custom Unit, you can create as you need them)
    Guardrails â€“Control Tower by default create the rules that are part of the baseline and applied in each AWS Account, you can extend them as well.
    AWS Service Catalog allows you to provision new AWS accounts and assign this account to your favorite Organization Unit.
    Source: https://www.mobiquity.com/insights/setting-up-aws-landing-zone-with-aws-control-tower

** Four core account

*** Shared Services account

They are not provisioned by Service Catalog, but during Control Tower set up.

microsoft ad, shared services network, optionally ???

    The Shared Services account is a reference for creating infrastructure
    shared services such as directory services. By default, this account hosts
    AWS Managed Active Directory for AWS SSO integration in a shared Amazon
    Virtual Private Cloud (Amazon VPC) that can be automatically peered with new
    AWS accounts created with the Account Vending Machine (AVM).
    Source: https://aws.amazon.com/solutions/implementations/aws-landing-zone/

- Connect to DC
- DNS
- LDAP/Active directory
- Shared services VPC
- Deployment tools (golden ami, pipeline)
- Scanning infrastructure (inactive instances, improper tags, snapshot lifecyle)
- Monitoring

*** Log Archive account:

What it has inside:
- Versioned s3 bucket
- resticted
- MFA delete
- cloudtrail
- security logs

read only access from outside to manipulate it
alarm on access to the account

They are not provisioned by Service Catalog, but during Control Tower set up.

cloud trail, aws config logs (audit or forensic) control - indipendend copy of
api logs and changes - local copy or cloudtrain within each account

    The Log Archive account contains a central Amazon S3 bucket for storing
    copies of all AWS CloudTrail and AWS Config log files in a log archive
    account.
    Source: https://aws.amazon.com/solutions/implementations/aws-landing-zone/

*** Security account

What it has inside:
- optional data server connectivity
- security tools and audit
- amazon GuardDuty master
- cross account read/write (automated tooling): failsafe. not the main way to login. change the policies.
- limited access

read only to everything to do audit, black glass scenario

    The Security account creates auditor (read-only) and administrator
    (full-access) cross-account roles from a Security account to all AWS Landing
    Zone managed accounts. The intent of these roles is to be used by a company's
    security and compliance team to audit or perform emergency security operations
    in case of an incident.
    This account is also designated as the master Amazon GuardDuty account. Users
    from the master account can configure GuardDuty as well as view and manage
    GuardDuty findings for their own account and all of their member accounts.
    Source: https://aws.amazon.com/solutions/implementations/aws-landing-zone/

account vending machine
it uses aws catalog product and lambda
to define what each account should have


aws catalog ui, can create new account
it will automatically go though a pipeline and apply
what you decided to do

lauch constrains: restrict amount of permission to run the job

Apply account baseline stack set

you can keep versions
of the baseline
so you can deploy account that are baselined at different version

delete default vpc

by default after cloudtrail send logs to the audit
security policy that won't allow cloudtrail to be disabled

Account baseline:
- CloudTrail (send all logs to centralised s3 bucket for bucket and local cloudwatch logs 14 days)
- Config : 7 rules (EBS/RDS/S3 encryption, IAM passowrd policy, root FMA, s3 public read/write permission)
- IAM password policy (user password change, password complexity/reuse/age/minimum lenght)
- VPC: Delete default vpc, (optional create VPC)

Optional products:
- AWS elasticsearch service intergration
- Kibana based log reporting and analisys (cloud trail, VPC flow log, CWlogs)

*** Network account

managed by network team
network services
limited access

- AWS Direct connect
- Transit gateway

* Options

Give each dev an account
50/100 dollars a month
disconneted
- No connection to DC
- Innovative space
- Fixed spending limit
- Autonomous

Team/product account
Think small
Match the development lifecyle

team shared services

>>>> They reccomend a QA and Staging for the landing zone.

Landing SNS topics
policy deployments

* Control Tower

Enable governance at scale.

Set up an AWS Landing zone, establish guardrails for governance, centralise identity
and ac cess, automate compliant account provisioning.

It will create (from demo)

- 2 OU, one for shared accounts and one for account provisioned for users
- 3 shared accounts: master account and isolated accounts for log archive and security audit
- A native cloud directory with preconfigured groups and sso
- 17 preventive guardrails (Jun 2019) to enforce policies and 2 detective guardrails to detect configuration vuolations

    As of time of writing, AWS Control Tower doesnâ€™t support existing setups for
    AWS Organization or AWS SSO, although official FAQ claims it will be added in
    the future, as well as ability to migrate from AWS Landing Zone solution to
    AWS Control Tower service.
    Source: https://www.linkedin.com/pulse/my-architecture-aws-control-tower-vs-landing-zone-eugene-istrati?trk=related_artice_My%20Architecture%3A%20AWS%20Control%20Tower%20vs%20AWS%20Landing%20Zone_article-card_title

    AWS Control Tower is an AWS managed service able to control all the resources
    that are part of: AWS Organizations, Identity and Access Management, Guardrails,
    Service Catalog and multi AWS accounts. Through the Service Catalog, you can
    create as many accounts as you want and apply to them the rules based on the
    requirements. Control Tower setup a Landing zone in easy and secure way.
    Source: https://www.mobiquity.com/insights/setting-up-aws-landing-zone-with-aws-control-tower

 we decided to build a managed solution for the landing zone when clients don't
 want to own the code and the complexity or do it themselves, and thatâ€™s what
 control tower is

 create log archive
 create security account - called audit
 no shared services

 account service machine is called account factory

starts with 30 guardrails

needs to be launched on new account
no enabled organisations

managed version of AWS Landing Zone

manage SSO
landing zone sets it up with active directory - SSO
for now only support SSO

for now does not create the shared services accounts

Tower allows you to create a blueprint around checks.

Tower creates an org for you
created 2 organisation unit

is a container to group account
you can organise by team, env (dev/uat), any way you want

- Core OU: accounts that control tower create
- Custom OU

Create Audit account and  Log archive

centralises identity and access is managed for you
AWS SSO create a directory to manage your user
and provides federated access management
all account you create will be federated with this one
for all the one you want

control tower will pre-create a lot of groups automatically

audit write
audit read
service-catalog xxx

preconfigured permission sets
admin
read only
write

then it establishes guardrails
preconfigured governance rules
curated AWS governance rules

it comes with 2 behaviours

guardrail setting (all accounts heredity it)

- preventive - prevent configuration from drifting. prevent thorough enforcement.
implemented using cloud formation and SCPs
- detective - build using config rule - SNS notification

control tower will give you
default or mandatory

IP address management - configurable


network factory???

via this users can configure and provision AWS account and resources without
needing full privileges to AWS services (AWS Ec2, dynamo, etc)

on going governance.

>>> guardrails are applied at the OU level! any account under that OU

guardrail is a stack set
in the background
aws SSO log into the account and see the CF template

there are 6 base signle sign on access
and ~10groups

* Terraform implementation

- providers
- components
- tfvars (they think configurations to be immutable)

they intentionally diddn't want to call them modules
but components
1 module provider === 1 aws accounts + region

landing zone provider have a default which is the master account
need to be there and needs account id and region

then there are (the key names are used later into the TVAR files)

core_account_security
core_account_logging
core_account_*

each of them needs a different account number

what are the components

they want only one resource per component
immutable terraform configuration
only change in the variable

landing_zone_components
  landing_zone_vpc
  landing_zone_subnet
  [...]

You can have one or more tfvars file

inside a tfvar you can define the provider
in the module you define all the providers you can use inside
the component
and inside you choose one

they have baselines of each vpc

--> constraints

default_provider
provider key name _provider
need to be this way

<landing_zone_vpc>_resource
*_resource is the conventions

then config_0
you can have multiple vpc
they iterate through all the variables
the count make sure it goes through all of them and picks it up

inside there are all the variables

--

they are iterating through providers
since natively you can't iterate though provider
they are going around it - hack
when you define the component you run it only once
but it will generate once for each tfvar for the component????



if you do changes in the tfvars
the module won't be able to pick it up
and a lot of shell calls

they also a build in house automation tool
functionality 1
allow to iterate for each provider
instead of write the same resource for the same provider
functionality 2
pick up tfvars not only from local but also s3
functionality 3
make connection between components
functionality 4
run all in parallel. like 8 threads
functionality 5
when it picks up an error from s3 will retry that step
also terraform plan is retried

for example crete subnets
but you need the VPC
here since you consider them immutable and independent
they need to say to the tools
create the VPC first and subnet second

what to do with the existing one?
like import?

the cloudformation is not build in a microservice way
so is very difficult to remove SSO
for example
but yes is gets the functionality CF provide and is written
in

this module for landing zone in terraform is very opaque in
how it works. I am not sure there are alternatives
[[https://youtu.be/KIoc-Lv554I?t=234]]

to see the demo
[[https://youtu.be/KIoc-Lv554I?t=980]]

* Terraform enterprise TLZ

- [[https://www.hashicorp.com/resources/aws-terraform-landing-zone-tlz-accelerator/]]

AWS TLZ

based on terraform enterprise
they are looking to support terraform cloud


* Alternatives

- [[https://github.com/MitocGroup/terraform-aws-landing-zone]] OS but uses a tool they created that yu need to pay by account - Not good
- gruntworks.io module (paid)

** Gruntwork Landing Zone

- [[https://gruntwork.io/guides/foundations/how-to-configure-production-grade-aws-account-structure/]]




* Re/Sources

- [[https://www.youtube.com/watch?v=KIoc-Lv554I][Hands-On Terraform Module for AWS Landing Zone]] 9 Mar 2020
- [[https://www.youtube.com/watch?v=2t-VkWt0rKk][AWS re:Inforce 2019: Using AWS Control Tower to Govern Multi-Account AWS Environments]] 26 Jun 2019
- [[https://www.youtube.com/watch?v=nNy5UjzejNc]] 26 Jun 2019
